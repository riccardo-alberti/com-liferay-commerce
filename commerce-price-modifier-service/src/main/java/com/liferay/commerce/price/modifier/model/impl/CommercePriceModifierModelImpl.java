/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.commerce.price.modifier.model.impl;

import com.liferay.commerce.price.modifier.model.CommercePriceModifier;
import com.liferay.commerce.price.modifier.model.CommercePriceModifierModel;
import com.liferay.commerce.price.modifier.model.CommercePriceModifierSoap;
import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.exportimport.kernel.lar.StagedModelType;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.workflow.WorkflowConstants;

import java.io.Serializable;

import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationHandler;

import java.math.BigDecimal;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the CommercePriceModifier service. Represents a row in the &quot;CommercePriceModifier&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface </code>CommercePriceModifierModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CommercePriceModifierImpl}.
 * </p>
 *
 * @author Riccardo Alberti
 * @see CommercePriceModifierImpl
 * @generated
 */
@JSON(strict = true)
public class CommercePriceModifierModelImpl
	extends BaseModelImpl<CommercePriceModifier>
	implements CommercePriceModifierModel {

	/**
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a commerce price modifier model instance should use the <code>CommercePriceModifier</code> interface instead.
	 */
	public static final String TABLE_NAME = "CommercePriceModifier";

	public static final Object[][] TABLE_COLUMNS = {
		{"uuid_", Types.VARCHAR}, {"externalReferenceCode", Types.VARCHAR},
		{"commercePriceModifierId", Types.BIGINT}, {"groupId", Types.BIGINT},
		{"companyId", Types.BIGINT}, {"userId", Types.BIGINT},
		{"userName", Types.VARCHAR}, {"createDate", Types.TIMESTAMP},
		{"modifiedDate", Types.TIMESTAMP}, {"description", Types.VARCHAR},
		{"title", Types.VARCHAR}, {"target", Types.VARCHAR},
		{"modifierType", Types.VARCHAR}, {"modifierAmount", Types.DECIMAL},
		{"priority", Types.DOUBLE}, {"active_", Types.BOOLEAN},
		{"displayDate", Types.TIMESTAMP}, {"expirationDate", Types.TIMESTAMP},
		{"lastPublishDate", Types.TIMESTAMP}, {"status", Types.INTEGER},
		{"statusByUserId", Types.BIGINT}, {"statusByUserName", Types.VARCHAR},
		{"statusDate", Types.TIMESTAMP}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("externalReferenceCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("commercePriceModifierId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("description", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("title", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("target", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("modifierType", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("modifierAmount", Types.DECIMAL);
		TABLE_COLUMNS_MAP.put("priority", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("active_", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("displayDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("expirationDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("lastPublishDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("status", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("statusByUserId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("statusByUserName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("statusDate", Types.TIMESTAMP);
	}

	public static final String TABLE_SQL_CREATE =
		"create table CommercePriceModifier (uuid_ VARCHAR(75) null,externalReferenceCode VARCHAR(75) null,commercePriceModifierId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,description VARCHAR(75) null,title VARCHAR(75) null,target VARCHAR(75) null,modifierType VARCHAR(75) null,modifierAmount DECIMAL(30, 16) null,priority DOUBLE,active_ BOOLEAN,displayDate DATE null,expirationDate DATE null,lastPublishDate DATE null,status INTEGER,statusByUserId LONG,statusByUserName VARCHAR(75) null,statusDate DATE null)";

	public static final String TABLE_SQL_DROP =
		"drop table CommercePriceModifier";

	public static final String ORDER_BY_JPQL =
		" ORDER BY commercePriceModifier.displayDate DESC, commercePriceModifier.createDate DESC, commercePriceModifier.priority DESC";

	public static final String ORDER_BY_SQL =
		" ORDER BY CommercePriceModifier.displayDate DESC, CommercePriceModifier.createDate DESC, CommercePriceModifier.priority DESC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(
		com.liferay.commerce.price.modifier.service.util.ServiceProps.get(
			"value.object.entity.cache.enabled.com.liferay.commerce.price.modifier.model.CommercePriceModifier"),
		true);

	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(
		com.liferay.commerce.price.modifier.service.util.ServiceProps.get(
			"value.object.finder.cache.enabled.com.liferay.commerce.price.modifier.model.CommercePriceModifier"),
		true);

	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(
		com.liferay.commerce.price.modifier.service.util.ServiceProps.get(
			"value.object.column.bitmask.enabled.com.liferay.commerce.price.modifier.model.CommercePriceModifier"),
		true);

	public static final long COMPANYID_COLUMN_BITMASK = 1L;

	public static final long DISPLAYDATE_COLUMN_BITMASK = 2L;

	public static final long EXPIRATIONDATE_COLUMN_BITMASK = 4L;

	public static final long EXTERNALREFERENCECODE_COLUMN_BITMASK = 8L;

	public static final long GROUPID_COLUMN_BITMASK = 16L;

	public static final long STATUS_COLUMN_BITMASK = 32L;

	public static final long TARGET_COLUMN_BITMASK = 64L;

	public static final long UUID_COLUMN_BITMASK = 128L;

	public static final long CREATEDATE_COLUMN_BITMASK = 256L;

	public static final long PRIORITY_COLUMN_BITMASK = 512L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static CommercePriceModifier toModel(
		CommercePriceModifierSoap soapModel) {

		if (soapModel == null) {
			return null;
		}

		CommercePriceModifier model = new CommercePriceModifierImpl();

		model.setUuid(soapModel.getUuid());
		model.setExternalReferenceCode(soapModel.getExternalReferenceCode());
		model.setCommercePriceModifierId(
			soapModel.getCommercePriceModifierId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setDescription(soapModel.getDescription());
		model.setTitle(soapModel.getTitle());
		model.setTarget(soapModel.getTarget());
		model.setModifierType(soapModel.getModifierType());
		model.setModifierAmount(soapModel.getModifierAmount());
		model.setPriority(soapModel.getPriority());
		model.setActive(soapModel.isActive());
		model.setDisplayDate(soapModel.getDisplayDate());
		model.setExpirationDate(soapModel.getExpirationDate());
		model.setLastPublishDate(soapModel.getLastPublishDate());
		model.setStatus(soapModel.getStatus());
		model.setStatusByUserId(soapModel.getStatusByUserId());
		model.setStatusByUserName(soapModel.getStatusByUserName());
		model.setStatusDate(soapModel.getStatusDate());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<CommercePriceModifier> toModels(
		CommercePriceModifierSoap[] soapModels) {

		if (soapModels == null) {
			return null;
		}

		List<CommercePriceModifier> models =
			new ArrayList<CommercePriceModifier>(soapModels.length);

		for (CommercePriceModifierSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(
		com.liferay.commerce.price.modifier.service.util.ServiceProps.get(
			"lock.expiration.time.com.liferay.commerce.price.modifier.model.CommercePriceModifier"));

	public CommercePriceModifierModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _commercePriceModifierId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setCommercePriceModifierId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _commercePriceModifierId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return CommercePriceModifier.class;
	}

	@Override
	public String getModelClassName() {
		return CommercePriceModifier.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<CommercePriceModifier, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<CommercePriceModifier, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<CommercePriceModifier, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((CommercePriceModifier)this));
		}

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<CommercePriceModifier, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<CommercePriceModifier, Object>
				attributeSetterBiConsumer = attributeSetterBiConsumers.get(
					attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(CommercePriceModifier)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<CommercePriceModifier, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<CommercePriceModifier, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static Function<InvocationHandler, CommercePriceModifier>
		_getProxyProviderFunction() {

		Class<?> proxyClass = ProxyUtil.getProxyClass(
			CommercePriceModifier.class.getClassLoader(),
			CommercePriceModifier.class, ModelWrapper.class);

		try {
			Constructor<CommercePriceModifier> constructor =
				(Constructor<CommercePriceModifier>)proxyClass.getConstructor(
					InvocationHandler.class);

			return invocationHandler -> {
				try {
					return constructor.newInstance(invocationHandler);
				}
				catch (ReflectiveOperationException roe) {
					throw new InternalError(roe);
				}
			};
		}
		catch (NoSuchMethodException nsme) {
			throw new InternalError(nsme);
		}
	}

	private static final Map<String, Function<CommercePriceModifier, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<CommercePriceModifier, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<CommercePriceModifier, Object>>
			attributeGetterFunctions =
				new LinkedHashMap
					<String, Function<CommercePriceModifier, Object>>();
		Map<String, BiConsumer<CommercePriceModifier, ?>>
			attributeSetterBiConsumers =
				new LinkedHashMap
					<String, BiConsumer<CommercePriceModifier, ?>>();

		attributeGetterFunctions.put(
			"uuid",
			new Function<CommercePriceModifier, Object>() {

				@Override
				public Object apply(
					CommercePriceModifier commercePriceModifier) {

					return commercePriceModifier.getUuid();
				}

			});
		attributeSetterBiConsumers.put(
			"uuid",
			new BiConsumer<CommercePriceModifier, Object>() {

				@Override
				public void accept(
					CommercePriceModifier commercePriceModifier,
					Object uuidObject) {

					commercePriceModifier.setUuid((String)uuidObject);
				}

			});
		attributeGetterFunctions.put(
			"externalReferenceCode",
			new Function<CommercePriceModifier, Object>() {

				@Override
				public Object apply(
					CommercePriceModifier commercePriceModifier) {

					return commercePriceModifier.getExternalReferenceCode();
				}

			});
		attributeSetterBiConsumers.put(
			"externalReferenceCode",
			new BiConsumer<CommercePriceModifier, Object>() {

				@Override
				public void accept(
					CommercePriceModifier commercePriceModifier,
					Object externalReferenceCodeObject) {

					commercePriceModifier.setExternalReferenceCode(
						(String)externalReferenceCodeObject);
				}

			});
		attributeGetterFunctions.put(
			"commercePriceModifierId",
			new Function<CommercePriceModifier, Object>() {

				@Override
				public Object apply(
					CommercePriceModifier commercePriceModifier) {

					return commercePriceModifier.getCommercePriceModifierId();
				}

			});
		attributeSetterBiConsumers.put(
			"commercePriceModifierId",
			new BiConsumer<CommercePriceModifier, Object>() {

				@Override
				public void accept(
					CommercePriceModifier commercePriceModifier,
					Object commercePriceModifierIdObject) {

					commercePriceModifier.setCommercePriceModifierId(
						(Long)commercePriceModifierIdObject);
				}

			});
		attributeGetterFunctions.put(
			"groupId",
			new Function<CommercePriceModifier, Object>() {

				@Override
				public Object apply(
					CommercePriceModifier commercePriceModifier) {

					return commercePriceModifier.getGroupId();
				}

			});
		attributeSetterBiConsumers.put(
			"groupId",
			new BiConsumer<CommercePriceModifier, Object>() {

				@Override
				public void accept(
					CommercePriceModifier commercePriceModifier,
					Object groupIdObject) {

					commercePriceModifier.setGroupId((Long)groupIdObject);
				}

			});
		attributeGetterFunctions.put(
			"companyId",
			new Function<CommercePriceModifier, Object>() {

				@Override
				public Object apply(
					CommercePriceModifier commercePriceModifier) {

					return commercePriceModifier.getCompanyId();
				}

			});
		attributeSetterBiConsumers.put(
			"companyId",
			new BiConsumer<CommercePriceModifier, Object>() {

				@Override
				public void accept(
					CommercePriceModifier commercePriceModifier,
					Object companyIdObject) {

					commercePriceModifier.setCompanyId((Long)companyIdObject);
				}

			});
		attributeGetterFunctions.put(
			"userId",
			new Function<CommercePriceModifier, Object>() {

				@Override
				public Object apply(
					CommercePriceModifier commercePriceModifier) {

					return commercePriceModifier.getUserId();
				}

			});
		attributeSetterBiConsumers.put(
			"userId",
			new BiConsumer<CommercePriceModifier, Object>() {

				@Override
				public void accept(
					CommercePriceModifier commercePriceModifier,
					Object userIdObject) {

					commercePriceModifier.setUserId((Long)userIdObject);
				}

			});
		attributeGetterFunctions.put(
			"userName",
			new Function<CommercePriceModifier, Object>() {

				@Override
				public Object apply(
					CommercePriceModifier commercePriceModifier) {

					return commercePriceModifier.getUserName();
				}

			});
		attributeSetterBiConsumers.put(
			"userName",
			new BiConsumer<CommercePriceModifier, Object>() {

				@Override
				public void accept(
					CommercePriceModifier commercePriceModifier,
					Object userNameObject) {

					commercePriceModifier.setUserName((String)userNameObject);
				}

			});
		attributeGetterFunctions.put(
			"createDate",
			new Function<CommercePriceModifier, Object>() {

				@Override
				public Object apply(
					CommercePriceModifier commercePriceModifier) {

					return commercePriceModifier.getCreateDate();
				}

			});
		attributeSetterBiConsumers.put(
			"createDate",
			new BiConsumer<CommercePriceModifier, Object>() {

				@Override
				public void accept(
					CommercePriceModifier commercePriceModifier,
					Object createDateObject) {

					commercePriceModifier.setCreateDate((Date)createDateObject);
				}

			});
		attributeGetterFunctions.put(
			"modifiedDate",
			new Function<CommercePriceModifier, Object>() {

				@Override
				public Object apply(
					CommercePriceModifier commercePriceModifier) {

					return commercePriceModifier.getModifiedDate();
				}

			});
		attributeSetterBiConsumers.put(
			"modifiedDate",
			new BiConsumer<CommercePriceModifier, Object>() {

				@Override
				public void accept(
					CommercePriceModifier commercePriceModifier,
					Object modifiedDateObject) {

					commercePriceModifier.setModifiedDate(
						(Date)modifiedDateObject);
				}

			});
		attributeGetterFunctions.put(
			"description",
			new Function<CommercePriceModifier, Object>() {

				@Override
				public Object apply(
					CommercePriceModifier commercePriceModifier) {

					return commercePriceModifier.getDescription();
				}

			});
		attributeSetterBiConsumers.put(
			"description",
			new BiConsumer<CommercePriceModifier, Object>() {

				@Override
				public void accept(
					CommercePriceModifier commercePriceModifier,
					Object descriptionObject) {

					commercePriceModifier.setDescription(
						(String)descriptionObject);
				}

			});
		attributeGetterFunctions.put(
			"title",
			new Function<CommercePriceModifier, Object>() {

				@Override
				public Object apply(
					CommercePriceModifier commercePriceModifier) {

					return commercePriceModifier.getTitle();
				}

			});
		attributeSetterBiConsumers.put(
			"title",
			new BiConsumer<CommercePriceModifier, Object>() {

				@Override
				public void accept(
					CommercePriceModifier commercePriceModifier,
					Object titleObject) {

					commercePriceModifier.setTitle((String)titleObject);
				}

			});
		attributeGetterFunctions.put(
			"target",
			new Function<CommercePriceModifier, Object>() {

				@Override
				public Object apply(
					CommercePriceModifier commercePriceModifier) {

					return commercePriceModifier.getTarget();
				}

			});
		attributeSetterBiConsumers.put(
			"target",
			new BiConsumer<CommercePriceModifier, Object>() {

				@Override
				public void accept(
					CommercePriceModifier commercePriceModifier,
					Object targetObject) {

					commercePriceModifier.setTarget((String)targetObject);
				}

			});
		attributeGetterFunctions.put(
			"modifierType",
			new Function<CommercePriceModifier, Object>() {

				@Override
				public Object apply(
					CommercePriceModifier commercePriceModifier) {

					return commercePriceModifier.getModifierType();
				}

			});
		attributeSetterBiConsumers.put(
			"modifierType",
			new BiConsumer<CommercePriceModifier, Object>() {

				@Override
				public void accept(
					CommercePriceModifier commercePriceModifier,
					Object modifierTypeObject) {

					commercePriceModifier.setModifierType(
						(String)modifierTypeObject);
				}

			});
		attributeGetterFunctions.put(
			"modifierAmount",
			new Function<CommercePriceModifier, Object>() {

				@Override
				public Object apply(
					CommercePriceModifier commercePriceModifier) {

					return commercePriceModifier.getModifierAmount();
				}

			});
		attributeSetterBiConsumers.put(
			"modifierAmount",
			new BiConsumer<CommercePriceModifier, Object>() {

				@Override
				public void accept(
					CommercePriceModifier commercePriceModifier,
					Object modifierAmountObject) {

					commercePriceModifier.setModifierAmount(
						(BigDecimal)modifierAmountObject);
				}

			});
		attributeGetterFunctions.put(
			"priority",
			new Function<CommercePriceModifier, Object>() {

				@Override
				public Object apply(
					CommercePriceModifier commercePriceModifier) {

					return commercePriceModifier.getPriority();
				}

			});
		attributeSetterBiConsumers.put(
			"priority",
			new BiConsumer<CommercePriceModifier, Object>() {

				@Override
				public void accept(
					CommercePriceModifier commercePriceModifier,
					Object priorityObject) {

					commercePriceModifier.setPriority((Double)priorityObject);
				}

			});
		attributeGetterFunctions.put(
			"active",
			new Function<CommercePriceModifier, Object>() {

				@Override
				public Object apply(
					CommercePriceModifier commercePriceModifier) {

					return commercePriceModifier.getActive();
				}

			});
		attributeSetterBiConsumers.put(
			"active",
			new BiConsumer<CommercePriceModifier, Object>() {

				@Override
				public void accept(
					CommercePriceModifier commercePriceModifier,
					Object activeObject) {

					commercePriceModifier.setActive((Boolean)activeObject);
				}

			});
		attributeGetterFunctions.put(
			"displayDate",
			new Function<CommercePriceModifier, Object>() {

				@Override
				public Object apply(
					CommercePriceModifier commercePriceModifier) {

					return commercePriceModifier.getDisplayDate();
				}

			});
		attributeSetterBiConsumers.put(
			"displayDate",
			new BiConsumer<CommercePriceModifier, Object>() {

				@Override
				public void accept(
					CommercePriceModifier commercePriceModifier,
					Object displayDateObject) {

					commercePriceModifier.setDisplayDate(
						(Date)displayDateObject);
				}

			});
		attributeGetterFunctions.put(
			"expirationDate",
			new Function<CommercePriceModifier, Object>() {

				@Override
				public Object apply(
					CommercePriceModifier commercePriceModifier) {

					return commercePriceModifier.getExpirationDate();
				}

			});
		attributeSetterBiConsumers.put(
			"expirationDate",
			new BiConsumer<CommercePriceModifier, Object>() {

				@Override
				public void accept(
					CommercePriceModifier commercePriceModifier,
					Object expirationDateObject) {

					commercePriceModifier.setExpirationDate(
						(Date)expirationDateObject);
				}

			});
		attributeGetterFunctions.put(
			"lastPublishDate",
			new Function<CommercePriceModifier, Object>() {

				@Override
				public Object apply(
					CommercePriceModifier commercePriceModifier) {

					return commercePriceModifier.getLastPublishDate();
				}

			});
		attributeSetterBiConsumers.put(
			"lastPublishDate",
			new BiConsumer<CommercePriceModifier, Object>() {

				@Override
				public void accept(
					CommercePriceModifier commercePriceModifier,
					Object lastPublishDateObject) {

					commercePriceModifier.setLastPublishDate(
						(Date)lastPublishDateObject);
				}

			});
		attributeGetterFunctions.put(
			"status",
			new Function<CommercePriceModifier, Object>() {

				@Override
				public Object apply(
					CommercePriceModifier commercePriceModifier) {

					return commercePriceModifier.getStatus();
				}

			});
		attributeSetterBiConsumers.put(
			"status",
			new BiConsumer<CommercePriceModifier, Object>() {

				@Override
				public void accept(
					CommercePriceModifier commercePriceModifier,
					Object statusObject) {

					commercePriceModifier.setStatus((Integer)statusObject);
				}

			});
		attributeGetterFunctions.put(
			"statusByUserId",
			new Function<CommercePriceModifier, Object>() {

				@Override
				public Object apply(
					CommercePriceModifier commercePriceModifier) {

					return commercePriceModifier.getStatusByUserId();
				}

			});
		attributeSetterBiConsumers.put(
			"statusByUserId",
			new BiConsumer<CommercePriceModifier, Object>() {

				@Override
				public void accept(
					CommercePriceModifier commercePriceModifier,
					Object statusByUserIdObject) {

					commercePriceModifier.setStatusByUserId(
						(Long)statusByUserIdObject);
				}

			});
		attributeGetterFunctions.put(
			"statusByUserName",
			new Function<CommercePriceModifier, Object>() {

				@Override
				public Object apply(
					CommercePriceModifier commercePriceModifier) {

					return commercePriceModifier.getStatusByUserName();
				}

			});
		attributeSetterBiConsumers.put(
			"statusByUserName",
			new BiConsumer<CommercePriceModifier, Object>() {

				@Override
				public void accept(
					CommercePriceModifier commercePriceModifier,
					Object statusByUserNameObject) {

					commercePriceModifier.setStatusByUserName(
						(String)statusByUserNameObject);
				}

			});
		attributeGetterFunctions.put(
			"statusDate",
			new Function<CommercePriceModifier, Object>() {

				@Override
				public Object apply(
					CommercePriceModifier commercePriceModifier) {

					return commercePriceModifier.getStatusDate();
				}

			});
		attributeSetterBiConsumers.put(
			"statusDate",
			new BiConsumer<CommercePriceModifier, Object>() {

				@Override
				public void accept(
					CommercePriceModifier commercePriceModifier,
					Object statusDateObject) {

					commercePriceModifier.setStatusDate((Date)statusDateObject);
				}

			});

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		_columnBitmask |= UUID_COLUMN_BITMASK;

		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@JSON
	@Override
	public String getExternalReferenceCode() {
		if (_externalReferenceCode == null) {
			return "";
		}
		else {
			return _externalReferenceCode;
		}
	}

	@Override
	public void setExternalReferenceCode(String externalReferenceCode) {
		_columnBitmask |= EXTERNALREFERENCECODE_COLUMN_BITMASK;

		if (_originalExternalReferenceCode == null) {
			_originalExternalReferenceCode = _externalReferenceCode;
		}

		_externalReferenceCode = externalReferenceCode;
	}

	public String getOriginalExternalReferenceCode() {
		return GetterUtil.getString(_originalExternalReferenceCode);
	}

	@JSON
	@Override
	public long getCommercePriceModifierId() {
		return _commercePriceModifierId;
	}

	@Override
	public void setCommercePriceModifierId(long commercePriceModifierId) {
		_commercePriceModifierId = commercePriceModifierId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_columnBitmask = -1L;

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getDescription() {
		if (_description == null) {
			return "";
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		_description = description;
	}

	@JSON
	@Override
	public String getTitle() {
		if (_title == null) {
			return "";
		}
		else {
			return _title;
		}
	}

	@Override
	public void setTitle(String title) {
		_title = title;
	}

	@JSON
	@Override
	public String getTarget() {
		if (_target == null) {
			return "";
		}
		else {
			return _target;
		}
	}

	@Override
	public void setTarget(String target) {
		_columnBitmask |= TARGET_COLUMN_BITMASK;

		if (_originalTarget == null) {
			_originalTarget = _target;
		}

		_target = target;
	}

	public String getOriginalTarget() {
		return GetterUtil.getString(_originalTarget);
	}

	@JSON
	@Override
	public String getModifierType() {
		if (_modifierType == null) {
			return "";
		}
		else {
			return _modifierType;
		}
	}

	@Override
	public void setModifierType(String modifierType) {
		_modifierType = modifierType;
	}

	@JSON
	@Override
	public BigDecimal getModifierAmount() {
		return _modifierAmount;
	}

	@Override
	public void setModifierAmount(BigDecimal modifierAmount) {
		_modifierAmount = modifierAmount;
	}

	@JSON
	@Override
	public double getPriority() {
		return _priority;
	}

	@Override
	public void setPriority(double priority) {
		_columnBitmask = -1L;

		_priority = priority;
	}

	@JSON
	@Override
	public boolean getActive() {
		return _active;
	}

	@JSON
	@Override
	public boolean isActive() {
		return _active;
	}

	@Override
	public void setActive(boolean active) {
		_active = active;
	}

	@JSON
	@Override
	public Date getDisplayDate() {
		return _displayDate;
	}

	@Override
	public void setDisplayDate(Date displayDate) {
		_columnBitmask = -1L;

		if (_originalDisplayDate == null) {
			_originalDisplayDate = _displayDate;
		}

		_displayDate = displayDate;
	}

	public Date getOriginalDisplayDate() {
		return _originalDisplayDate;
	}

	@JSON
	@Override
	public Date getExpirationDate() {
		return _expirationDate;
	}

	@Override
	public void setExpirationDate(Date expirationDate) {
		_columnBitmask |= EXPIRATIONDATE_COLUMN_BITMASK;

		if (_originalExpirationDate == null) {
			_originalExpirationDate = _expirationDate;
		}

		_expirationDate = expirationDate;
	}

	public Date getOriginalExpirationDate() {
		return _originalExpirationDate;
	}

	@JSON
	@Override
	public Date getLastPublishDate() {
		return _lastPublishDate;
	}

	@Override
	public void setLastPublishDate(Date lastPublishDate) {
		_lastPublishDate = lastPublishDate;
	}

	@JSON
	@Override
	public int getStatus() {
		return _status;
	}

	@Override
	public void setStatus(int status) {
		_columnBitmask |= STATUS_COLUMN_BITMASK;

		if (!_setOriginalStatus) {
			_setOriginalStatus = true;

			_originalStatus = _status;
		}

		_status = status;
	}

	public int getOriginalStatus() {
		return _originalStatus;
	}

	@JSON
	@Override
	public long getStatusByUserId() {
		return _statusByUserId;
	}

	@Override
	public void setStatusByUserId(long statusByUserId) {
		_statusByUserId = statusByUserId;
	}

	@Override
	public String getStatusByUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getStatusByUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return "";
		}
	}

	@Override
	public void setStatusByUserUuid(String statusByUserUuid) {
	}

	@JSON
	@Override
	public String getStatusByUserName() {
		if (_statusByUserName == null) {
			return "";
		}
		else {
			return _statusByUserName;
		}
	}

	@Override
	public void setStatusByUserName(String statusByUserName) {
		_statusByUserName = statusByUserName;
	}

	@JSON
	@Override
	public Date getStatusDate() {
		return _statusDate;
	}

	@Override
	public void setStatusDate(Date statusDate) {
		_statusDate = statusDate;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(
			PortalUtil.getClassNameId(CommercePriceModifier.class.getName()));
	}

	@Override
	public boolean isApproved() {
		if (getStatus() == WorkflowConstants.STATUS_APPROVED) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isDenied() {
		if (getStatus() == WorkflowConstants.STATUS_DENIED) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isDraft() {
		if (getStatus() == WorkflowConstants.STATUS_DRAFT) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isExpired() {
		if (getStatus() == WorkflowConstants.STATUS_EXPIRED) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isInactive() {
		if (getStatus() == WorkflowConstants.STATUS_INACTIVE) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isIncomplete() {
		if (getStatus() == WorkflowConstants.STATUS_INCOMPLETE) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isPending() {
		if (getStatus() == WorkflowConstants.STATUS_PENDING) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isScheduled() {
		if (getStatus() == WorkflowConstants.STATUS_SCHEDULED) {
			return true;
		}
		else {
			return false;
		}
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), CommercePriceModifier.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public CommercePriceModifier toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, CommercePriceModifier>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		CommercePriceModifierImpl commercePriceModifierImpl =
			new CommercePriceModifierImpl();

		commercePriceModifierImpl.setUuid(getUuid());
		commercePriceModifierImpl.setExternalReferenceCode(
			getExternalReferenceCode());
		commercePriceModifierImpl.setCommercePriceModifierId(
			getCommercePriceModifierId());
		commercePriceModifierImpl.setGroupId(getGroupId());
		commercePriceModifierImpl.setCompanyId(getCompanyId());
		commercePriceModifierImpl.setUserId(getUserId());
		commercePriceModifierImpl.setUserName(getUserName());
		commercePriceModifierImpl.setCreateDate(getCreateDate());
		commercePriceModifierImpl.setModifiedDate(getModifiedDate());
		commercePriceModifierImpl.setDescription(getDescription());
		commercePriceModifierImpl.setTitle(getTitle());
		commercePriceModifierImpl.setTarget(getTarget());
		commercePriceModifierImpl.setModifierType(getModifierType());
		commercePriceModifierImpl.setModifierAmount(getModifierAmount());
		commercePriceModifierImpl.setPriority(getPriority());
		commercePriceModifierImpl.setActive(isActive());
		commercePriceModifierImpl.setDisplayDate(getDisplayDate());
		commercePriceModifierImpl.setExpirationDate(getExpirationDate());
		commercePriceModifierImpl.setLastPublishDate(getLastPublishDate());
		commercePriceModifierImpl.setStatus(getStatus());
		commercePriceModifierImpl.setStatusByUserId(getStatusByUserId());
		commercePriceModifierImpl.setStatusByUserName(getStatusByUserName());
		commercePriceModifierImpl.setStatusDate(getStatusDate());

		commercePriceModifierImpl.resetOriginalValues();

		return commercePriceModifierImpl;
	}

	@Override
	public int compareTo(CommercePriceModifier commercePriceModifier) {
		int value = 0;

		value = DateUtil.compareTo(
			getDisplayDate(), commercePriceModifier.getDisplayDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		value = DateUtil.compareTo(
			getCreateDate(), commercePriceModifier.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		if (getPriority() < commercePriceModifier.getPriority()) {
			value = -1;
		}
		else if (getPriority() > commercePriceModifier.getPriority()) {
			value = 1;
		}
		else {
			value = 0;
		}

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof CommercePriceModifier)) {
			return false;
		}

		CommercePriceModifier commercePriceModifier =
			(CommercePriceModifier)obj;

		long primaryKey = commercePriceModifier.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		CommercePriceModifierModelImpl commercePriceModifierModelImpl = this;

		commercePriceModifierModelImpl._originalUuid =
			commercePriceModifierModelImpl._uuid;

		commercePriceModifierModelImpl._originalExternalReferenceCode =
			commercePriceModifierModelImpl._externalReferenceCode;

		commercePriceModifierModelImpl._originalGroupId =
			commercePriceModifierModelImpl._groupId;

		commercePriceModifierModelImpl._setOriginalGroupId = false;

		commercePriceModifierModelImpl._originalCompanyId =
			commercePriceModifierModelImpl._companyId;

		commercePriceModifierModelImpl._setOriginalCompanyId = false;

		commercePriceModifierModelImpl._setModifiedDate = false;

		commercePriceModifierModelImpl._originalTarget =
			commercePriceModifierModelImpl._target;

		commercePriceModifierModelImpl._originalDisplayDate =
			commercePriceModifierModelImpl._displayDate;

		commercePriceModifierModelImpl._originalExpirationDate =
			commercePriceModifierModelImpl._expirationDate;

		commercePriceModifierModelImpl._originalStatus =
			commercePriceModifierModelImpl._status;

		commercePriceModifierModelImpl._setOriginalStatus = false;

		commercePriceModifierModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<CommercePriceModifier> toCacheModel() {
		CommercePriceModifierCacheModel commercePriceModifierCacheModel =
			new CommercePriceModifierCacheModel();

		commercePriceModifierCacheModel.uuid = getUuid();

		String uuid = commercePriceModifierCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			commercePriceModifierCacheModel.uuid = null;
		}

		commercePriceModifierCacheModel.externalReferenceCode =
			getExternalReferenceCode();

		String externalReferenceCode =
			commercePriceModifierCacheModel.externalReferenceCode;

		if ((externalReferenceCode != null) &&
			(externalReferenceCode.length() == 0)) {

			commercePriceModifierCacheModel.externalReferenceCode = null;
		}

		commercePriceModifierCacheModel.commercePriceModifierId =
			getCommercePriceModifierId();

		commercePriceModifierCacheModel.groupId = getGroupId();

		commercePriceModifierCacheModel.companyId = getCompanyId();

		commercePriceModifierCacheModel.userId = getUserId();

		commercePriceModifierCacheModel.userName = getUserName();

		String userName = commercePriceModifierCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			commercePriceModifierCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			commercePriceModifierCacheModel.createDate = createDate.getTime();
		}
		else {
			commercePriceModifierCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			commercePriceModifierCacheModel.modifiedDate =
				modifiedDate.getTime();
		}
		else {
			commercePriceModifierCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		commercePriceModifierCacheModel.description = getDescription();

		String description = commercePriceModifierCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			commercePriceModifierCacheModel.description = null;
		}

		commercePriceModifierCacheModel.title = getTitle();

		String title = commercePriceModifierCacheModel.title;

		if ((title != null) && (title.length() == 0)) {
			commercePriceModifierCacheModel.title = null;
		}

		commercePriceModifierCacheModel.target = getTarget();

		String target = commercePriceModifierCacheModel.target;

		if ((target != null) && (target.length() == 0)) {
			commercePriceModifierCacheModel.target = null;
		}

		commercePriceModifierCacheModel.modifierType = getModifierType();

		String modifierType = commercePriceModifierCacheModel.modifierType;

		if ((modifierType != null) && (modifierType.length() == 0)) {
			commercePriceModifierCacheModel.modifierType = null;
		}

		commercePriceModifierCacheModel.modifierAmount = getModifierAmount();

		commercePriceModifierCacheModel.priority = getPriority();

		commercePriceModifierCacheModel.active = isActive();

		Date displayDate = getDisplayDate();

		if (displayDate != null) {
			commercePriceModifierCacheModel.displayDate = displayDate.getTime();
		}
		else {
			commercePriceModifierCacheModel.displayDate = Long.MIN_VALUE;
		}

		Date expirationDate = getExpirationDate();

		if (expirationDate != null) {
			commercePriceModifierCacheModel.expirationDate =
				expirationDate.getTime();
		}
		else {
			commercePriceModifierCacheModel.expirationDate = Long.MIN_VALUE;
		}

		Date lastPublishDate = getLastPublishDate();

		if (lastPublishDate != null) {
			commercePriceModifierCacheModel.lastPublishDate =
				lastPublishDate.getTime();
		}
		else {
			commercePriceModifierCacheModel.lastPublishDate = Long.MIN_VALUE;
		}

		commercePriceModifierCacheModel.status = getStatus();

		commercePriceModifierCacheModel.statusByUserId = getStatusByUserId();

		commercePriceModifierCacheModel.statusByUserName =
			getStatusByUserName();

		String statusByUserName =
			commercePriceModifierCacheModel.statusByUserName;

		if ((statusByUserName != null) && (statusByUserName.length() == 0)) {
			commercePriceModifierCacheModel.statusByUserName = null;
		}

		Date statusDate = getStatusDate();

		if (statusDate != null) {
			commercePriceModifierCacheModel.statusDate = statusDate.getTime();
		}
		else {
			commercePriceModifierCacheModel.statusDate = Long.MIN_VALUE;
		}

		return commercePriceModifierCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<CommercePriceModifier, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			4 * attributeGetterFunctions.size() + 2);

		sb.append("{");

		for (Map.Entry<String, Function<CommercePriceModifier, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<CommercePriceModifier, Object> attributeGetterFunction =
				entry.getValue();

			sb.append(attributeName);
			sb.append("=");
			sb.append(
				attributeGetterFunction.apply((CommercePriceModifier)this));
			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<CommercePriceModifier, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			5 * attributeGetterFunctions.size() + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<CommercePriceModifier, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<CommercePriceModifier, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(
				attributeGetterFunction.apply((CommercePriceModifier)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, CommercePriceModifier>
			_escapedModelProxyProviderFunction = _getProxyProviderFunction();

	}

	private String _uuid;
	private String _originalUuid;
	private String _externalReferenceCode;
	private String _originalExternalReferenceCode;
	private long _commercePriceModifierId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _description;
	private String _title;
	private String _target;
	private String _originalTarget;
	private String _modifierType;
	private BigDecimal _modifierAmount;
	private double _priority;
	private boolean _active;
	private Date _displayDate;
	private Date _originalDisplayDate;
	private Date _expirationDate;
	private Date _originalExpirationDate;
	private Date _lastPublishDate;
	private int _status;
	private int _originalStatus;
	private boolean _setOriginalStatus;
	private long _statusByUserId;
	private String _statusByUserName;
	private Date _statusDate;
	private long _columnBitmask;
	private CommercePriceModifier _escapedModel;

}